name: Deployment to ec2-server

on:
  push:
    branches:
      - main
jobs:
  built:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          sparse-checkout: |
            app
      - name: node build and installation
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm i
        working-directory: app
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: app
          push: true
          tags: techchoco/test_node_app:1.0.${{ github.run_number }}
  deployment:
    needs: built
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH connectivity
        run: |
          echo "Testing SSH connection..."
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          ssh -i <(echo "${{ secrets.EC2_SSH_KEY }}") \
              -o StrictHostKeyChecking=no \
              ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
              "echo 'SSH connection successful!'"
        shell: bash
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  
      - name: Deploy via SSH to EC2
        uses: appleboy/ssh-action@v1.0.0  # Updated to latest stable version
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: 22
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ${{ secrets.EC2_PATH }}
            docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull techchoco/test_node_app:1.0.${{ github.run_number }}
            docker stop test_app_1 || true
            docker rm -f test_app_1 || true
            docker run -p 3000:3000 \
              --name test_app_1 \
              -d \
              techchoco/test_node_app:1.0.${{ github.run_number }}
