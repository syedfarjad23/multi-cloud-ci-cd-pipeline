name: Deployment to ec2-server

on:
  push:
    branches:
      - main
jobs:
  built:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          sparse-checkout: |
            app
            security
      - name: node build and installation
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm i
        working-directory: app
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: app
          push: true
          tags: techchoco/test_node_app:1.0.${{ github.run_number }}
  
  security_test:
    needs: built
    runs-on: ubuntu-latest
    steps:
      - name: trivy scan
        run: |
          chmod +x security/trivy_scan.sh
          ./security/trivy_scan.sh techchoco/test_node_app:1.0.$RUN_NUMBER
  deployment:
    needs: security_test
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH connectivity
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          EC2_PATH: ${{ secrets.EC2_PATH }}
          RUN_NUMBER: ${{ github.run_number }}
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "Testing SSH connection..."
          echo "$PRIVATE_KEY" > github-ec2.pem
          chmod 600 github-ec2.pem
          
          # Use double quotes for the entire SSH command
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} "\
            echo 'Current directory: ' && pwd && \
            echo 'Listing home directory:' && \
            ls -la ~ && \
            docker login -u $DOCKER_USER -p $DOCKER_TOKEN && \
            cd '$EC2_PATH' && \
            docker stop test_app_1 || true && \
            docker rm -f test_app_1 || true && \
            docker run -p 3000:3000 \
              --name test_app_1 \
              -d \
              techchoco/test_node_app:1.0.$RUN_NUMBER"
